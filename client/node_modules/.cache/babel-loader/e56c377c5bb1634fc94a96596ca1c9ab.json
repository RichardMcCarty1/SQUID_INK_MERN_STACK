{"ast":null,"code":"import _objectWithoutProperties from \"/Users/caitlin/SQUID_MERN/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/caitlin/SQUID_MERN/client/src/actions/authActions.js\";\n\nimport axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\nimport { useHistory } from \"react-router-dom\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router';\nimport { GET_ERRORS, SET_CURRENT_USER, USER_LOADING } from \"./types\"; // Register User\n\nexport var registerUser = function registerUser(userData, history) {\n  return function (dispatch) {\n    axios.post(\"/api/users/register\", userData).then(function (res) {\n      return history.push(\"/login\");\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; // Login - get user token\n\nexport var loginUser = function loginUser(userData) {\n  return function (dispatch) {\n    axios.post(\"/api/users/login\", userData).then(function (res) {\n      // Save to localStorage\n      // Set token to localStorage\n      var token = res.data.token;\n      localStorage.setItem(\"jwtToken\", token); // Set token to Auth header\n\n      setAuthToken(token); // Decode token to get user data\n\n      var decoded = jwt_decode(token); // Set current user\n\n      dispatch(setCurrentUser(decoded));\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; // Set logged in user\n\nexport var setCurrentUser = function setCurrentUser(decoded) {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n}; // User loading\n\nexport var setUserLoading = function setUserLoading() {\n  return {\n    type: USER_LOADING\n  };\n}; // Log user out\n\nexport var logoutUser = function logoutUser() {\n  return function (dispatch) {\n    // Remove token from local storage\n    localStorage.removeItem(\"jwtToken\"); // Remove auth header for future requests\n\n    setAuthToken(false); // Set current user to empty object {} which will set isAuthenticated to false\n\n    dispatch(setCurrentUser({}));\n  };\n};\n\nvar LinkButton = function LinkButton(props) {\n  var history = props.history,\n      location = props.location,\n      match = props.match,\n      staticContext = props.staticContext,\n      to = props.to,\n      _onClick = props.onClick,\n      rest = _objectWithoutProperties(props, [\"history\", \"location\", \"match\", \"staticContext\", \"to\", \"onClick\"]);\n\n  return /*#__PURE__*/React.createElement(\"button\", Object.assign({}, rest, {\n    // `children` is just another prop!\n    onClick: function onClick(event) {\n      _onClick && _onClick(event);\n      history.push(to);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }));\n};\n\nLinkButton.propTypes = {\n  to: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired\n};\nexport default withRouter(LinkButton);","map":{"version":3,"sources":["/Users/caitlin/SQUID_MERN/client/src/actions/authActions.js"],"names":["axios","setAuthToken","jwt_decode","useHistory","React","PropTypes","withRouter","GET_ERRORS","SET_CURRENT_USER","USER_LOADING","registerUser","userData","history","dispatch","post","then","res","push","catch","err","type","payload","response","data","loginUser","token","localStorage","setItem","decoded","setCurrentUser","setUserLoading","logoutUser","removeItem","LinkButton","props","location","match","staticContext","to","onClick","rest","event","propTypes","string","isRequired","children","node"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\nimport { useHistory } from \"react-router-dom\";\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { withRouter } from 'react-router'\n\nimport { GET_ERRORS, SET_CURRENT_USER, USER_LOADING } from \"./types\";\n\n// Register User\nexport const registerUser = (userData, history) => dispatch => {\n  axios\n    .post(\"/api/users/register\", userData)\n    .then(res => history.push(\"/login\"))\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n// Login - get user token\nexport const loginUser = userData => dispatch => {\n  axios\n    .post(\"/api/users/login\", userData)\n    .then(res => {\n      // Save to localStorage\n\n      // Set token to localStorage\n      const { token } = res.data;\n      localStorage.setItem(\"jwtToken\", token);\n      // Set token to Auth header\n      setAuthToken(token);\n      // Decode token to get user data\n      const decoded = jwt_decode(token);\n      // Set current user\n      dispatch(setCurrentUser(decoded));\n    })\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n// Set logged in user\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n};\n\n// User loading\nexport const setUserLoading = () => {\n  return {\n    type: USER_LOADING\n  };\n};\n\n// Log user out\nexport const logoutUser = () => dispatch => {\n  // Remove token from local storage\n  localStorage.removeItem(\"jwtToken\");\n  // Remove auth header for future requests\n  setAuthToken(false);\n  // Set current user to empty object {} which will set isAuthenticated to false\n  dispatch(setCurrentUser({}));\n};\n\n\nconst LinkButton = (props) => {\n  const {\n    history,\n    location,\n    match,\n    staticContext,\n    to,\n    onClick,\n    // ⬆ filtering out props that `button` doesn’t know what to do with.\n    ...rest\n  } = props\n  return (\n    <button\n      {...rest} // `children` is just another prop!\n      onClick={(event) => {\n        onClick && onClick(event)\n        history.push(to)\n      }}\n    />\n  )\n}\n\nLinkButton.propTypes = {\n  to: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired\n}\n\nexport default withRouter(LinkButton)\n\n\n\n"]},"metadata":{},"sourceType":"module"}