{"ast":null,"code":"import _classCallCheck from \"/Users/caitlin/SQUID_MERN/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/caitlin/SQUID_MERN/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/caitlin/SQUID_MERN/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/caitlin/SQUID_MERN/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/caitlin/SQUID_MERN/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/caitlin/SQUID_MERN/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/caitlin/SQUID_MERN/client/src/components/upload/Upload.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport axios from 'axios';\n\nvar Upload = /*#__PURE__*/function (_React$Component) {\n  _inherits(Upload, _React$Component);\n\n  function Upload(props) {\n    var _this;\n\n    _classCallCheck(this, Upload);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Upload).call(this, props));\n    _this.state = {\n      files: [],\n      file: ''\n    };\n    _this.onFormSubmit = _this.onFormSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.loadFiles = _this.loadFiles.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Upload, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadFiles();\n    }\n  }, {\n    key: \"loadFiles\",\n    value: function loadFiles() {\n      var _this2 = this;\n\n      fetch('/api/files').then(function (res) {\n        return res.json();\n      }).then(function (files) {\n        if (files.message) {\n          console.log('No Files');\n\n          _this2.setState({\n            files: []\n          });\n        } else {\n          _this2.setState({\n            files: files\n          });\n        }\n      });\n    }\n  }, {\n    key: \"fileChanged\",\n    value: function fileChanged(event) {\n      var f = event.target.files[0];\n      this.setState({\n        file: f\n      });\n    }\n  }, {\n    key: \"deleteFile\",\n    value: function deleteFile(event) {\n      var _this3 = this;\n\n      event.preventDefault();\n      var id = event.target.id;\n      fetch('/api/files/' + id, {\n        method: 'DELETE'\n      }).then(function (res) {\n        return res.json();\n      }).then(function (response) {\n        console.log(response);\n        if (response.success) _this3.loadFiles();else alert('Delete Failed');\n      });\n    }\n  }, {\n    key: \"uploadFile\",\n    value: function uploadFile(event) {\n      var _this4 = this;\n\n      event.preventDefault();\n      var data = new FormData();\n      data.append('file', this.state.file);\n      fetch('/api/files', {\n        method: 'POST',\n        body: data\n      }).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        if (data.success) {\n          _this4.loadFiles();\n        } else {\n          alert('Upload failed');\n        }\n      });\n    }\n  }, {\n    key: \"onFormSubmit\",\n    value: function onFormSubmit(e) {\n      e.preventDefault();\n      var formData = new FormData();\n      formData.append('myfile', this.state.file);\n      console.log('myfile', this.state.file);\n      var config = {\n        headers: {\n          'content-type': 'multipart/form-data'\n        }\n      };\n      axios.post(\"http://localhost:5000/api/users/files\", formData, config).then(function (response) {\n        alert(\"The file is successfully uploaded\");\n        console.log(\"uploaded\");\n      }).catch(function (error) {});\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(e) {\n      this.setState({\n        file: e.target.files\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var user = this.props.auth.user;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          height: \"75vh\"\n        },\n        className: \"container valign-wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"landing-copy col s12 center-align\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"flow-text grey-text text-darken-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }\n      }, \"Upload files to server\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"file\",\n        name: \"file\",\n        id: \"file\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 26\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }\n      })))))));\n    }\n  }]);\n\n  return Upload;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth\n  };\n};\n\nexport default connect(mapStateToProps, {})(Upload);","map":{"version":3,"sources":["/Users/caitlin/SQUID_MERN/client/src/components/upload/Upload.js"],"names":["React","Component","connect","axios","Upload","props","state","files","file","onFormSubmit","bind","onChange","loadFiles","fetch","then","res","json","message","console","log","setState","event","f","target","preventDefault","id","method","response","success","alert","data","FormData","append","body","e","formData","config","headers","post","catch","error","user","auth","height","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport axios from 'axios';\n\n\n\n\n\nclass Upload extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state ={\n      files: [],\n      file: ''\n    };\n    this.onFormSubmit = this.onFormSubmit.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.loadFiles = this.loadFiles.bind(this);\n}\n\ncomponentDidMount() {\n  this.loadFiles();\n}\n\n\nloadFiles() {\n  fetch('/api/files')\n    .then(res => res.json())\n    .then(files => {\n      if (files.message) {\n        console.log('No Files');\n        this.setState({ files: [] })\n      } else {\n        this.setState({ files })\n      }\n    });\n}\nfileChanged(event) {\n const f = event.target.files[0];\n this.setState({\n   file: f\n });\n}\ndeleteFile(event) {\n event.preventDefault();\n const id = event.target.id;\n fetch('/api/files/'+id, {\n   method: 'DELETE'\n }).then(res => res.json())\n   .then(response => {\n     console.log(response);\n     if (response.success) this.loadFiles()\n     else alert('Delete Failed');\n   })\n}\nuploadFile(event) {\n  event.preventDefault();\n  let data = new FormData();\n  data.append('file', this.state.file);\n fetch('/api/files', {\n   method: 'POST',\n   body: data\n }).then(res => res.json())\n   .then(data => {\n     if (data.success) {\n     this.loadFiles();\n   } else {\n     alert('Upload failed');\n   }\n });\n}\n\n\n\n\nonFormSubmit(e){\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('myfile',this.state.file);\n    console.log('myfile',this.state.file)\n    const config = {\n        headers: {\n            'content-type': 'multipart/form-data'\n        }\n    };\n    axios.post(\"http://localhost:5000/api/users/files\",formData,config)\n        .then((response) => {\n            alert(\"The file is successfully uploaded\");\n            console.log(\"uploaded\"); \n        }).catch((error) => {\n    });\n}\n\nonChange(e) {\n    this.setState({file:e.target.files});\n}\n  render() {\n\n    \n    const { user } = this.props.auth;\n\n    return (\n      <div style={{ height: \"75vh\" }} className=\"container valign-wrapper\">\n        <div className=\"row\">\n          <div className=\"landing-copy col s12 center-align\">\n            <h4>\n              <p className=\"flow-text grey-text text-darken-1\">\n                Upload files to server\n              </p>\n            </h4>\n\n            <div className=\"container\">\n                <div className=\"row\">\n                    <form>\n\n                    <input type=\"file\" name=\"file\" id=\"file\" required />\n                    <br/><br/>\n                    <input type=\"submit\" />\n   \n                    </form>\n                </div>\n            </div>\n\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n \n});\n\nexport default connect(\n  mapStateToProps,\n  { }\n)  (Upload);\n\n"]},"metadata":{},"sourceType":"module"}